# Generated by Django 3.1.3 on 2021-01-02 17:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='ну это типо погоняло книги', max_length=50, verbose_name='название')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('text', models.TextField()),
                ('rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=3)),
                ('count_rated_users', models.PositiveIntegerField(default=0)),
                ('count_all_stars', models.PositiveIntegerField(default=0)),
                ('slug', models.SlugField(null=True, unique=True)),
                ('authors', models.ManyToManyField(related_name='books', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Книга',
                'verbose_name_plural': 'Книги',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='manager.book')),
            ],
        ),
        migrations.CreateModel(
            name='TestTale',
            fields=[
                ('title', models.CharField(db_column='title', max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='TestComment1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.testtale')),
            ],
        ),
        migrations.CreateModel(
            name='TestComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.testtale')),
            ],
        ),
        migrations.CreateModel(
            name='LikeCommentUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_user_table', to='manager.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_comment_table', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'comment')},
            },
        ),
        migrations.CreateModel(
            name='LikeBookUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveIntegerField(default=5)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_user_table', to='manager.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked_book_table', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'book')},
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='users_like',
            field=models.ManyToManyField(related_name='liked_comment', through='manager.LikeCommentUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='book',
            name='users_like',
            field=models.ManyToManyField(related_name='liked_books', through='manager.LikeBookUser', to=settings.AUTH_USER_MODEL),
        ),
    ]
